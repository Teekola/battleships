generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider  = "postgresql"
   url       = env("DATABASE_URL")
   directUrl = env("DIRECT_URL")
}

model Game {
   id               String         @id
   player1Id        String?
   player1Name      String?
   player1Ready     Boolean?
   player2Id        String?
   player2Name      String?
   player2Ready     Boolean?
   player1PlayAgain Boolean?
   player2PlayAgain Boolean?
   winnerId         String?
   currentTurn      String?
   state            GameState
   gameEndReason    GameEndReason?
   boardSize        Int
   carriers         Int
   battleships      Int
   cruisers         Int
   submarines       Int
   destroyers       Int
   createdAt        DateTime       @default(now())
   updatedAt        DateTime       @updatedAt
   PlacedShip       PlacedShip[]
   Move             Move[]
}

enum GameState {
   WAITING_FOR_PLAYER
   SHIP_PLACEMENT
   PLAYING
   FINISHED
}

enum GameEndReason {
   WIN
   TIE
   TIMEOUT
}

model PlacedShip {
   id          Int             @id @default(autoincrement())
   game        Game            @relation(fields: [gameId], references: [id], onDelete: Cascade)
   gameId      String
   playerId    String
   shipId      String
   shipType    ShipType
   x           Int
   y           Int
   size        Int
   orientation ShipOrientation

   @@unique([gameId, playerId, x, y])
}

model Move {
   id        Int      @id @default(autoincrement())
   game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
   gameId    String
   playerId  String
   x         Int
   y         Int
   createdAt DateTime @default(now())
}

enum ShipType {
   CARRIER
   BATTLESHIP
   CRUISER
   SUBMARINE
   DESTROYER
}

enum ShipOrientation {
   HORIZONTAL
   VERTICAL
}
